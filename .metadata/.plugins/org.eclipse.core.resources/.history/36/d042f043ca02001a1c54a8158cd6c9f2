package kakao;

import java.util.Arrays;

public class Solution3 {

	static boolean visited[]=new boolean[5];
	static int answer;
	static boolean flag;
	
	
	public static void main(String[] args) {
		solution(new String[]{"frodo", "fradi", "crodo", "abc123", "frodoc"}, new String[]{"fr*d*", "abc1**"});
		System.out.println(answer);
	}
	
    public static int solution(String[] user_id, String[] banned_id) {
    	for(int i=0; i<user_id.length; i++){
    		flag=false;
    		dfs(user_id[i],banned_id,0,user_id[i].length());
    	}
        return answer;
    }
    static void dfs(String a, String[] b,int index, int len){
    	if(flag)return;
    	isMatch(a, b);
    	if(index==len-1){
    		return;
    	}
    	for(int i=index;i<len; i++){
    		if(!visited[i]){
    			visited[i]=true;
    			dfs(a,b,i+1, len);
    			visited[i]=false;
    		}
    	}
    }

	private static void isMatch(String ex, String[] ori) {
		String str= new String(ex);
		for(int i=0; i<str.length(); i++){
			if(visited[i])
				str= str.substring(0,i)+'*'+str.substring(i+1);
		}
		for(String s : ori){
			if(str.equals(s)){
				answer++;
				flag=true;
			}
			break;
		}
	}
}
